name: deb packaging

on:
  push:
    tags:
      - 'debian/*.*.*-*'
      - 'test/*'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  DEBFULLNAME: Github Actions
  DEBEMAIL: "github-actions@example.com"

jobs:

  build-native:
    name: build native
    runs-on: ubuntu-latest

    steps:
      - name: check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: source
      - name: build deb
        run: |
          sudo apt-get update
          sudo apt-get install -y debhelper-compat git-buildpackage equivs
          sudo mk-build-deps -i -r source/debian/control -t "apt-get -y -o Debug::pkgProblemResolver=yes --no-install-recommends --yes"
          rm -f *.deb *.buildinfo *.changes

          pushd source

          git config user.name "${DEBFULLNAME}"
          git config user.email "${DEBEMAIL}"
          DISTCODENAME=$(lsb_release -c -s)
          PARENTVERSION=$(dpkg-parsechangelog --show-field Version)
          dch -b -D "${DISTCODENAME}" -v "${PARENTVERSION}~${DISTCODENAME}" "Release for ${DISTCODENAME}"
          git add .
          git commit -m "Update changelog for $(dpkg-parsechangelog --show-field Version) release"

          gbp buildpackage -F -us -uc --git-export-dir=.. --git-ignore-branch

          popd
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: results-native
          retention-days: 1
          path: |
            *.buildinfo
            *.changes
            *.ddeb
            *.deb
            *.dsc
            *.tar*

# duplicate build jobs (native vs qemu) may be simpler in the future: https://github.com/uraimo/run-on-arch-action/issues/93
  build-qemu:
    name: build ${{ matrix.distro }} ${{ matrix.arch }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - arch: armv7
            distro: ubuntu_latest
          - arch: aarch64
            distro: ubuntu_latest
          - arch: riscv64
            distro: ubuntu_latest
          - arch: armv7
            distro: bullseye
          - arch: aarch64
            distro: bullseye
          # - arch: riscv64
          #   distro: bullseye

    steps:
      - name: check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: source
      - name: build deb
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          githubToken: ${{ github.token }}
          env: |
            DEBFULLNAME: ${{ env.DEBFULLNAME }}
            DEBEMAIL: ${{ env.DEBEMAIL }}
          dockerRunArgs: |
            --volume "${PWD}:/work"
          install: |
            apt-get update
            apt-get install -y debhelper-compat git-buildpackage equivs
          run: |
            pushd /work/source

            mk-build-deps -i -r debian/control -t "apt-get -y -o Debug::pkgProblemResolver=yes --no-install-recommends --yes"
            rm -f *.deb *.buildinfo *.changes

            git config user.name "${DEBFULLNAME}"
            git config user.email "${DEBEMAIL}"
            DISTCODENAME=$(lsb_release -c -s)
            PARENTVERSION=$(dpkg-parsechangelog --show-field Version)
            dch -b -D "${DISTCODENAME}" -v "${PARENTVERSION}~${DISTCODENAME}" "Release for ${DISTCODENAME}"
            git add .
            git commit -m "Update changelog for $(dpkg-parsechangelog --show-field Version) release"

            gbp buildpackage -B -us -uc --git-export-dir=.. --git-ignore-branch

            popd
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: results-qemu
          retention-days: 1
          path: |
            *.buildinfo
            *.changes
            *.ddeb
            *.deb
            *.dsc
            *.tar*

  release:
    if: startsWith(github.event.ref, 'refs/tags/debian')
    needs: [build-native, build-qemu]
    runs-on: ubuntu-latest

    steps:
      - name: check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: source
      - name: download artifacts
        uses: actions/download-artifact@v3
      - name: prepare changelog
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg-dev
          pushd source
          dpkg-parsechangelog -S Changes | tail -n+4 > ../changelog
          popd
      - name: release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: false
          draft: false
          fail_on_unmatched_files: true
          body_path: changelog
          files: |
            results-*/*.changes

  # upload:
  #   needs: release
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: download artifacts
  #       uses: actions/download-artifact@v3
